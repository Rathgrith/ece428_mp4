// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: namenode.proto

package idl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AskFileStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *AskFileStoreRequest) Reset() {
	*x = AskFileStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskFileStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskFileStoreRequest) ProtoMessage() {}

func (x *AskFileStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskFileStoreRequest.ProtoReflect.Descriptor instead.
func (*AskFileStoreRequest) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{0}
}

func (x *AskFileStoreRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type AskFileStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        StatusCode  `protobuf:"varint,1,opt,name=code,proto3,enum=sdfs.StatusCode" json:"code,omitempty"`
	Coordinator *NodeInfo   `protobuf:"bytes,2,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	Secondaries []*NodeInfo `protobuf:"bytes,3,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
}

func (x *AskFileStoreResponse) Reset() {
	*x = AskFileStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskFileStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskFileStoreResponse) ProtoMessage() {}

func (x *AskFileStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskFileStoreResponse.ProtoReflect.Descriptor instead.
func (*AskFileStoreResponse) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{1}
}

func (x *AskFileStoreResponse) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_Unknown
}

func (x *AskFileStoreResponse) GetCoordinator() *NodeInfo {
	if x != nil {
		return x.Coordinator
	}
	return nil
}

func (x *AskFileStoreResponse) GetSecondaries() []*NodeInfo {
	if x != nil {
		return x.Secondaries
	}
	return nil
}

type QueryFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *QueryFileRequest) Reset() {
	*x = QueryFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileRequest) ProtoMessage() {}

func (x *QueryFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileRequest.ProtoReflect.Descriptor instead.
func (*QueryFileRequest) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{2}
}

func (x *QueryFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type QueryFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        StatusCode  `protobuf:"varint,1,opt,name=code,proto3,enum=sdfs.StatusCode" json:"code,omitempty"`
	Coordinator *NodeInfo   `protobuf:"bytes,2,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	Secondaries []*NodeInfo `protobuf:"bytes,3,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
}

func (x *QueryFileResponse) Reset() {
	*x = QueryFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileResponse) ProtoMessage() {}

func (x *QueryFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileResponse.ProtoReflect.Descriptor instead.
func (*QueryFileResponse) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFileResponse) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_Unknown
}

func (x *QueryFileResponse) GetCoordinator() *NodeInfo {
	if x != nil {
		return x.Coordinator
	}
	return nil
}

func (x *QueryFileResponse) GetSecondaries() []*NodeInfo {
	if x != nil {
		return x.Secondaries
	}
	return nil
}

type RegisterDataNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node  *NodeInfo     `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Files []*FileReport `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *RegisterDataNodeRequest) Reset() {
	*x = RegisterDataNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeRequest) ProtoMessage() {}

func (x *RegisterDataNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeRequest) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterDataNodeRequest) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *RegisterDataNodeRequest) GetFiles() []*FileReport {
	if x != nil {
		return x.Files
	}
	return nil
}

type RegisterDataNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdfs.StatusCode" json:"code,omitempty"`
}

func (x *RegisterDataNodeResponse) Reset() {
	*x = RegisterDataNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeResponse) ProtoMessage() {}

func (x *RegisterDataNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeResponse) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterDataNodeResponse) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_Unknown
}

type AckFileStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo *FileReport `protobuf:"bytes,1,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Replicas []*NodeInfo `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *AckFileStoreRequest) Reset() {
	*x = AckFileStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckFileStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckFileStoreRequest) ProtoMessage() {}

func (x *AckFileStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckFileStoreRequest.ProtoReflect.Descriptor instead.
func (*AckFileStoreRequest) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{6}
}

func (x *AckFileStoreRequest) GetFileInfo() *FileReport {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *AckFileStoreRequest) GetReplicas() []*NodeInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type AckFileStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdfs.StatusCode" json:"code,omitempty"`
}

func (x *AckFileStoreResponse) Reset() {
	*x = AckFileStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckFileStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckFileStoreResponse) ProtoMessage() {}

func (x *AckFileStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckFileStoreResponse.ProtoReflect.Descriptor instead.
func (*AckFileStoreResponse) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{7}
}

func (x *AckFileStoreResponse) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_Unknown
}

var File_namenode_proto protoreflect.FileDescriptor

var file_namenode_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x73, 0x64, 0x66, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x13, 0x41, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x41, 0x73, 0x6b, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64,
	0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x64, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64,
	0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x64, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x40, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x64,
	0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x41, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64,
	0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x3c, 0x0a, 0x14, 0x41, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x64,
	0x66, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x32, 0xf1, 0x02, 0x0a, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x41, 0x73, 0x6b, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x41,
	0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x41, 0x73, 0x6b, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0c, 0x41, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x19, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x41, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x66,
	0x73, 0x2e, 0x41, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x64, 0x66, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x64, 0x66, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x69, 0x64, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_namenode_proto_rawDescOnce sync.Once
	file_namenode_proto_rawDescData = file_namenode_proto_rawDesc
)

func file_namenode_proto_rawDescGZIP() []byte {
	file_namenode_proto_rawDescOnce.Do(func() {
		file_namenode_proto_rawDescData = protoimpl.X.CompressGZIP(file_namenode_proto_rawDescData)
	})
	return file_namenode_proto_rawDescData
}

var file_namenode_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_namenode_proto_goTypes = []interface{}{
	(*AskFileStoreRequest)(nil),      // 0: sdfs.AskFileStoreRequest
	(*AskFileStoreResponse)(nil),     // 1: sdfs.AskFileStoreResponse
	(*QueryFileRequest)(nil),         // 2: sdfs.QueryFileRequest
	(*QueryFileResponse)(nil),        // 3: sdfs.QueryFileResponse
	(*RegisterDataNodeRequest)(nil),  // 4: sdfs.RegisterDataNodeRequest
	(*RegisterDataNodeResponse)(nil), // 5: sdfs.RegisterDataNodeResponse
	(*AckFileStoreRequest)(nil),      // 6: sdfs.AckFileStoreRequest
	(*AckFileStoreResponse)(nil),     // 7: sdfs.AckFileStoreResponse
	(StatusCode)(0),                  // 8: sdfs.StatusCode
	(*NodeInfo)(nil),                 // 9: sdfs.NodeInfo
	(*FileReport)(nil),               // 10: sdfs.FileReport
	(*DeleteFileRequest)(nil),        // 11: sdfs.DeleteFileRequest
	(*DeleteFileResponse)(nil),       // 12: sdfs.DeleteFileResponse
}
var file_namenode_proto_depIdxs = []int32{
	8,  // 0: sdfs.AskFileStoreResponse.code:type_name -> sdfs.StatusCode
	9,  // 1: sdfs.AskFileStoreResponse.coordinator:type_name -> sdfs.NodeInfo
	9,  // 2: sdfs.AskFileStoreResponse.secondaries:type_name -> sdfs.NodeInfo
	8,  // 3: sdfs.QueryFileResponse.code:type_name -> sdfs.StatusCode
	9,  // 4: sdfs.QueryFileResponse.coordinator:type_name -> sdfs.NodeInfo
	9,  // 5: sdfs.QueryFileResponse.secondaries:type_name -> sdfs.NodeInfo
	9,  // 6: sdfs.RegisterDataNodeRequest.node:type_name -> sdfs.NodeInfo
	10, // 7: sdfs.RegisterDataNodeRequest.files:type_name -> sdfs.FileReport
	8,  // 8: sdfs.RegisterDataNodeResponse.code:type_name -> sdfs.StatusCode
	10, // 9: sdfs.AckFileStoreRequest.file_info:type_name -> sdfs.FileReport
	9,  // 10: sdfs.AckFileStoreRequest.replicas:type_name -> sdfs.NodeInfo
	8,  // 11: sdfs.AckFileStoreResponse.code:type_name -> sdfs.StatusCode
	0,  // 12: sdfs.NameNodeService.AskFileStore:input_type -> sdfs.AskFileStoreRequest
	4,  // 13: sdfs.NameNodeService.RegisterDataNode:input_type -> sdfs.RegisterDataNodeRequest
	2,  // 14: sdfs.NameNodeService.QueryFile:input_type -> sdfs.QueryFileRequest
	6,  // 15: sdfs.NameNodeService.AckFileStore:input_type -> sdfs.AckFileStoreRequest
	11, // 16: sdfs.NameNodeService.DeleteFile:input_type -> sdfs.DeleteFileRequest
	1,  // 17: sdfs.NameNodeService.AskFileStore:output_type -> sdfs.AskFileStoreResponse
	5,  // 18: sdfs.NameNodeService.RegisterDataNode:output_type -> sdfs.RegisterDataNodeResponse
	3,  // 19: sdfs.NameNodeService.QueryFile:output_type -> sdfs.QueryFileResponse
	7,  // 20: sdfs.NameNodeService.AckFileStore:output_type -> sdfs.AckFileStoreResponse
	12, // 21: sdfs.NameNodeService.DeleteFile:output_type -> sdfs.DeleteFileResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_namenode_proto_init() }
func file_namenode_proto_init() {
	if File_namenode_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_namenode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskFileStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskFileStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckFileStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_namenode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckFileStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_namenode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_namenode_proto_goTypes,
		DependencyIndexes: file_namenode_proto_depIdxs,
		MessageInfos:      file_namenode_proto_msgTypes,
	}.Build()
	File_namenode_proto = out.File
	file_namenode_proto_rawDesc = nil
	file_namenode_proto_goTypes = nil
	file_namenode_proto_depIdxs = nil
}
